exit
vi /etc/pam.d/password-auth 
vi /etc/pam.d/system-auth 
passwd 
cd /etc/yum.repos.d/
ls
cat *
cat redhat.repo 
yum repolist all
yum update
yum update --allowerasing
yum upgrade --allowerasing
yum upgrade --allowerasing --nobest
cat /etc/redhat-release 
yum repolist all
ls /etc/yum.repos.d/
yum update
yum update --allowerasing
yum update --allowerasing --nobest
yum update --allowerasing --nobest --best
yum update --allowerasing --best
yum update --skip-broken --best
yum update --allowerasing
yum update --allowerasing --nobest
yum update perl-interpreter
yum upgrade perl-interpreter
yum upgrade perl-interpreter --allowerasing
yum update
yum update cockpit-bridge-276.1-1.el8.x86_64
yum upgrade cockpit-bridge-276.1-1.el8.x86_64 --allowerasing
yum update
istory
history\
history
exit
cd /etc/yum.repos.d/
ls
cat RHELOS-8.repo 
vi RHELOS-8.repo 
yum clean all
passwd 
shutdown
cd /etc/yum.repos.d/
ls
ip a
cd /etc/yum.repos.d/
ls
vi RHELOS-8.repo 
passwd
sync
cd /etc/yum.repos.d/
ls
vi RHELOS-8.repo 
yum clean all
yum update
yum upgrade
reboot
echo "root:754" | chpasswd
ls
pwd
mkdir tmp
chmod 777 tmp
free -h
ll
chmod 777 st_req.sh 
./st_req.sh 
ll
cd ./tmp
cd ..
cd ./tmp
curl -L -o SecureTransport_5.5-20231221_Install_linux-x86-64_BN3202.zip --cookie "SPHERESESSID=5a4c878917dc841bdf409e9a5d6ef2bc" https://support.axway.com/en/downloads/download/id/1462446
ll
unzip SecureTransport_5.5-20231221_Install_linux-x86-64_BN3202.zip 
ll
cd ..
ll
pwd
cd ./tmp
ll
./setup.sh
ps -ef | grep Secure
cd ..
ll
cd ./Axway/
cd ./SecureTransport/
ll
cd ./lib/admin/config
nano servers
cat servers
ps -ef | grep Secure
cd ../
cd ..
cd ./bin
./stop_all
./start_all
./stop_all
./start_all
cd /root/Axway/SecureTransport/bin
./stop_all
ps -ef | grep Secure
cd ./Axway/SecureTransport/bin
./stop_all
ps -ef | grep Secure
cd ./var/tmp
cd ../var/tmp
ll
rm -rf *
cd ../run
ll
rm -rf
rm -rf *
ll
cd ../../bin
ll
ps -ef | grep Secure
sudo vi /etc/security/limits.d/99-securetransport.conf
tail -f /root/Axway/install.log
cd /root
ll
cd ./tmp
ll
cd ..
cd -
rm -rf *
ll
curl -L -o SecureTransport_5.5-20241219_Update_allOS_BN3217.zip --cookie "SPHERESESSID=78ce7ad80239fb0413ea00a314e3aef9" https://support.axway.com/en/downloads/download/id/1469575
sudo systemctl edit --force securetransport_db.service
systemctl daemon-reexec
code /etc/systemd/system.conf
code /etc/systemd/user.conf
pwd
ll
unzip SecureTransport_5.5-20241219_Update_allOS_BN3217.zip 
sestatus
ps -ef | grep Secure
kill -9 1449 1000
ps -ef | grep Secure
cd /root
ll
cd ./Axway/SecureTransport/var/run
ll
rm -rf *
cd ../../..
ll
./update.sh -i /root/tmp/UpdateStep1/AxwayInstaller-5.0.52-UP-allOS.jar
stuser   soft  nofile   65536
stuser   hard  nofile   65536
stuser   soft  nproc    65536
stuser   hard  nproc    65536
stuser   soft  memlock  4194304
stuser   hard  memlock  4194304
./update.sh -i /root/tmp/UpdateStep2/SecureTransport-Update-5.5-20241219-3217-allOS.jar
lsof -i :444
lsof -i :80
cd ./SecureTransport/bin
./stop_all
ps -ef | grep Secure
mkdir -p /var/lib/postgresql/data/tablespaces/st_data
mkdir -p /var/lib/postgresql/data/tablespaces/st_index
chown -R postgres:postgres /var/lib/postgresql/data/tablespaces
cmkdir -p $HOME/postgres_tablespaces/st_data
mkdir -p $HOME/postgres_tablespaces/st_index
mkdir -p $HOME/postgres_tablespaces/st_data
mkdir -p $HOME/postgres_tablespaces/st_index
sudo chown -R 999:999 $HOME/postgres_tablespaces
docker run -d   --name postgres12   -e POSTGRES_USER=SA   -e POSTGRES_PASSWORD=Secret123!   -e POSTGRES_DB=STDB   -p 5432:5432   --restart=always   -v $HOME/postgres_data:/var/lib/postgresql/data   -v $HOME/postgres_tablespaces:/var/lib/postgresql/tablespaces   postgres:15
docker stop postgres12
docker rm postgres12 
docker run -d   --name postgres12   -e POSTGRES_USER=SA   -e POSTGRES_PASSWORD=Secret123!   -e POSTGRES_DB=STDB   -p 5432:5432   --restart=always   -v $HOME/postgres_data:/var/lib/postgresql/data   -v $HOME/postgres_tablespaces:/var/lib/postgresql/tablespaces   postgres:15
mkdir -p /var/lib/postgresql/tablespaces/st_data
mkdir -p /var/lib/postgresql/tablespaces/st_filetracking
mkdir -p /var/lib/postgresql/tablespaces/st_serverlog
chown -R 999:999 /var/lib/postgresql/tablespaces
docker stop postgres12 
docker rm postgres12 
docker run -d     --name postgres12     -e POSTGRES_USER=SA     -e POSTGRES_PASSWORD=Secret123!     -e POSTGRES_DB=STDB     -p 5432:5432     --restart=always     -v $HOME/postgres_data:/var/lib/postgresql/data     postgres:15
docker ps
mkdir -p /var/lib/postgresql/tablespaces/st_filetracking
mkdir -p /var/lib/postgresql/tablespaces/st_serverlog
mkdir -p /var/lib/postgresql/tablespaces/st_filetracking
mkdir -p /var/lib/postgresql/tablespaces/st_serverlog
vi /var/lib/postgresql/data/postgresql.conf
cd /var/lib/postgresql/data/
ll
cd ./tablespaces/
ll
tree .
cd ~
ll
cd ./postgres_
cd ./postgres_data/
ll
nano postgresql.conf
docker restart postgres12
docker ps
nano postgresql.conf
docker restart postgres12 
docker stop postgres12 
docker rm postgres12 
docker run -d     --name postgres12     -e POSTGRES_USER=SA     -e POSTGRES_PASSWORD=Secret123!     -e POSTGRES_DB=STDB     -p 5432:5432     --restart=always     -v $HOME/postgres_data:/var/lib/postgresql/data     postgres:15
docker ps
cd /Ax
cd ./Axway/
ll
cd ./SecureTransport/
cd ~
docker
ll
chmod 777 dockrhel.sh 
./dockrhel.sh 
chmod 777 dockrhel.sh 
./dockrhel.sh 
docker -v
docker --version
docker --v
docker version
docker
ll
sudo yum install -y nfs-utils
cd /
ll | grep srv
cd ./srv
ll
cd /
sudo mkdir -p /srv/nfs_share
sudo chown -R nfsnobody:nfsnobody /srv/nfs_share
sudo chmod 755 /srv/nfs_share
sudo chown -R root:root /srv/nfs_share
sudo chmod 755 /srv/nfs_share
nano /etc/exports
sudo exportfs -rav
sudo systemctl enable --now nfs-server
sudo firewall-cmd --permanent --add-service=nfs
sudo firewall-cmd --permanent --add-service=mountd
sudo firewall-cmd --permanent --add-service=rpc-bind
sudo firewall-cmd --reload
sudo vi /etc/exports
sudo mount 10.128.144.225:/srv/nfs_share /mnt/nfs_share
sudo vi /etc/exports
sudo systemctl stop nfs-server
sudo systemctl disable nfs-server
sudo systemctl stop nfs-mountd
sudo systemctl stop nfs-idmapd
sudo yum remove -y nfs-utils
sudo rm -f /etc/exports
sudo rm -rf /srv/nfs_share /srv/nfs_share2 /mnt/nfs_share /mnt/nfs_share2
ll
chmod 777 ./nfs_setup_vm2.sh 
./nfs_setup_vm2.sh 10.128.144.21
cd ./srv
ll
cd ./mnt
ll
echo "World" > k.txt
ll
mount | grep nfs
cd /mnt
tree .
ll
cd ./vm1_share/
ll
echo 'korusuke' > z.txt
ll
cd /mnt/
tree .
cd ..
cd /mnt
tree .
ll
tree .
pwd
cd ./vm1_share/
pwd
cd /srv
tree .
cd /mnt
tree .
ll
cd /root
ll
docker --version
ll
docker pull postgres:15
docker ps
docker ps -a
docker run -d     --name postgres12     -e POSTGRES_USER=SA     -e POSTGRES_PASSWORD=Secret123!     -e POSTGRES_DB=STDB     -p 54321:54321     postgres:15
docker ps
docker stop 0ffe79175669
docker ps
mkdir -p /var/lib/postgresql/data
mkdir -p $HOME/postgres_data
docker run -d     --name postgres12     -e POSTGRES_USER=SA     -e POSTGRES_PASSWORD=Secret123!     -e POSTGRES_DB=STDB     -p 5432:5432     --restart=always     -v $HOME/postgres_data:/var/lib/postgresql/data     postgres:15
docker remove 0ffe79175669963a808e9a5f81d0c6c6918b12a18074ca5da79b885bb46aa4cc
docker delete postgres12
docker rm postgres12
docker run -d     --name postgres12     -e POSTGRES_USER=SA     -e POSTGRES_PASSWORD=Secret123!     -e POSTGRES_DB=STDB     -p 5432:5432     --restart=always     -v $HOME/postgres_data:/var/lib/postgresql/data     postgres:15
docker ps
ll
cd ./postgres_data/
ll
find . -type f -name postgresql.conf
nano postgresql.conf 
pwd
nano pg_hba.conf 
docker restart postgres15
docker ps
docker restart postgres12
docker exec -it postgres12 psql -U SA -d STDB
docker ps
docker stop postgres12
docker rm postgres12
docker run -d     --name postgres12     -e POSTGRES_USER=SA     -e POSTGRES_PASSWORD=Secret123!     -e POSTGRES_DB=STDB     -p 5432:5432     --restart=always     -v $HOME/postgres_data:/var/lib/postgresql/data     postgres:15
docker ps
docker exec -it postgres12 psql -U SA -d STDB
mkdir -p /var/lib/postgresql/data/st_data
chown postgres:postgres /var/lib/postgresql/data/st_data
docker exec -it postgres12 psql -U SA -d STDB
docker restart st-postgres
docker exec -it st-postgres psql -U stuser -d stdb
docker ps
docker start postgres15
docker ps -a
docker start 80bdf28ec659
docker logs 80bdf28ec659
docker run -d   --name st-postgres   -e POSTGRES_USER=stuser   -e POSTGRES_PASSWORD=StrongPassword123   -e POSTGRES_DB=stdb   -p 5432:5432   -v /opt/postgres/data:/var/lib/postgresql/data   -v /opt/postgres/postgresql.conf:/etc/postgresql/postgresql.conf   postgres:15   -c 'config_file=/etc/postgresql/postgresql.conf'
docker rm 80bdf28ec65922b25dedbdf0aa77a226c686d9b7007bbfa782fe99a4506d70fe
docker run -d   --name st-postgres   -e POSTGRES_USER=stuser   -e POSTGRES_PASSWORD=StrongPassword123   -e POSTGRES_DB=stdb   -p 5432:5432   -v /opt/postgres/data:/var/lib/postgresql/data   -v /opt/postgres/postgresql.conf:/etc/postgresql/postgresql.conf   postgres:15   -c 'config_file=/etc/postgresql/postgresql.conf'
docker exec -it st-postgres psql -U stuser -d stdb
docker ps
docker logs st-postgres 
# Ensure the data directory is owned by postgres
sudo chown -R 999:999 /opt/postgres/data
sudo chmod 700 /opt/postgres/data
# Ensure the config file is owned by postgres
sudo chown 999:999 /opt/postgres/postgresql.conf
sudo chmod 600 /opt/postgres/postgresql.conf
docker start st-postgres
docker ps
docker logs
docker log
docker logs st-postgres 
sudo chown 999:999 /opt/postgres/postgresql.conf
sudo chmod 600 /opt/postgres/postgresql.conf
docker start st-postgres
docker ps
docker exec -it st-postgres bash
code /var/lib/postgresql/data/postgresql.conf
cd $PGDATA
ll
ls -la
docker exec -it st-postgres bash
docker exec -it st-postgres psql -U stuser -d stdb
docker ps
docker ps -a
docker start 80bdf28ec659
docker ps
ll
docker exec -it st-postgres psql -U stuser -d stdb
cd /
find . -type f -name '*/postgres/postgresql.conf'
find . -type f -path '*/postgres/postgresql.conf'
find . -path '*/postgres/postgresql.conf'
# Copy from the stopped container to host
docker cp 80bdf28ec659:/var/lib/postgresql/data/postgresql.conf /opt/postgres/postgresql.conf
code /opt/postgres/postgresql.conf
psql -U stuser -d stdb
sudo chown -R 999:999 /opt/postgres/data
sudo chmod 700 /opt/postgres/data
sudo chown -R 999:999 /opt/postgres/tablespaces
sudo chmod 700 /opt/postgres/tablespaces
sudo chown 999:999 /opt/postgres/postgresql.conf
sudo chmod 600 /opt/postgres/postgresql.conf
# Create a directory for certificates
mkdir -p /opt/postgres/certs
chmod 700 /opt/postgres/certs
# Move into the directory
cd /opt/postgres/certs
# Generate server key
openssl genrsa -des3 -out server.key 2048
# Remove passphrase for PostgreSQL
openssl rsa -in server.key -out server.key
# Generate server certificate signing request (CSR)
openssl req -new -key server.key -out server.csr     -subj "/CN=postgres.example.com"
# Self-sign the certificate
openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt
# Secure permissions
chmod 600 server.key server.crt
pwd
ll
docker ps
docker stop 38a3d08af173
docker rm 38a3d08af173
docker run -d   --name st-postgres   -e POSTGRES_USER=stuser   -e POSTGRES_PASSWORD=StrongPassword123   -e POSTGRES_DB=stdb   -p 5432:5432   -v /opt/postgres/data:/var/lib/postgresql/data   -v /opt/postgres/postgresql.conf:/etc/postgresql/postgresql.conf   -v /opt/postgres/certs:/etc/postgresql/certs:ro   postgres:15   -c 'config_file=/etc/postgresql/postgresql.conf'
docker ps
docker log st-user
docker log st-postgres
docker logs st-postgres
# Make sure the certificates directory and files are owned by UID 999
chown -R 999:999 /opt/postgres/certs
chmod 600 /opt/postgres/certs/server.key
chmod 644 /opt/postgres/certs/server.crt
docker restart st-postgres
docker ps
docker logs st-postgres
docker ps
# Step 1: Change ownership of certificates to UID 999 (postgres inside Docker)
chown -R 999:999 /opt/postgres/certs
# Step 2: Set correct permissions
chmod 600 /opt/postgres/certs/server.key
chmod 644 /opt/postgres/certs/server.crt
# Step 3: Restart the container
docker restart st-postgres
# Step 4: Check container logs for errors
docker logs st-postgres
docker ps
code /root/.bash_history 
lscpu
docker ps
docker stop postgres12
ps
docker ps
docker rm postgres12
docker ps -a
htop
top
docker pull postgres:15
mkdir -p /opt/postgres/data
mkdir -p /opt/postgres/filetracking
mkdir -p /opt/postgres/serverlog
ll
cd ./postgres_data/
rm -rf *
cd ..
ll
rmdir postgres_data/
ll
cd /
ll
cd /var
ll
cd ~
docker ps
docker run -d   --name st-postgres   -e POSTGRES_USER=stuser   -e POSTGRES_PASSWORD=StrongPassword123   -e POSTGRES_DB=stdb   -p 5432:5432   -v /opt/postgres/data:/var/lib/postgresql/data   -v /opt/postgres/filetracking:/var/lib/postgresql/filetracking   -v /opt/postgres/serverlog:/var/lib/postgresql/serverlog   postgres:15
docker ps
docker exec -it st-postgres psql -U stuser -d stdb
mkdir -p /opt/postgres/st_data
mkdir -p /opt/postgres/st_filetracking
mkdir -p /opt/postgres/st_serverlog
# On the host
sudo chown -R 999:999 /opt/postgres/st_data
sudo chown -R 999:999 /opt/postgres/st_filetracking
sudo chown -R 999:999 /opt/postgres/st_serverlog
docker run -d   --name st-postgres   -e POSTGRES_USER=stuser   -e POSTGRES_PASSWORD=StrongPassword123   -e POSTGRES_DB=stdb   -p 5432:5432   -v /opt/postgres/st_data:/st_data   -v /opt/postgres/st_filetracking:/st_filetracking   -v /opt/postgres/st_serverlog:/st_serverlog   postgres:15
docker ps
docker stop postgres15
docker stop b621f7c758ad
docker rm b621f7c758ad
docker run -d   --name st-postgres   -e POSTGRES_USER=stuser   -e POSTGRES_PASSWORD=StrongPassword123   -e POSTGRES_DB=stdb   -p 5432:5432   -v /opt/postgres/st_data:/st_data   -v /opt/postgres/st_filetracking:/st_filetracking   -v /opt/postgres/st_serverlog:/st_serverlog   postgres:15
docker exec -it st-postgres psql -U stuser -d stdb
# Copy from Docker container to host
docker cp st-postgres:/etc/postgresql/certs/server.crt /opt/postgres/certs/server.crt
htop
top
lscpu
free -h
ss -a
ss -tuln
ss -tuna
ss -tulpn | grep :80
ss -tulpn | grep :1
ss -pl
cd /etc
ll | grep rep
cd ./yum.repos.d/
ll
code *
dnf repolist
pwd
ll
cd /
cd /etc
ll | grep repo
cd ./yum.repos.d/
ll
ll
pwd
pwd
ll
pwd
ll
htop
top
cd /etc
ll | grep repo
cd ./yum.repos.d/
ll
code RHELOS-8.repo 
code RHELOS-8.repo 
code
dnf install code
pwd
ll
htop
cd /etc/yum.repos.d/
ll
code *
dnf repolist
docker
docker pull ubuntu
dnf --list-repo
dnf repolist
dnf install htop
dnf repolist

dnf install htop
dnf repolist
dnf repolist -a
dnf repolist all
dnf config-manager --set-enabled local-debug
dnf repolist all
yum repolist all
dnf repoinfo
dnf install htop
dnf repolist all
ll
code *
cd /etc/yum.conf
yum-config-manager
yum-config-manager --add-repo
dnf repolist
dnf config-manager
dnf config-manager --set-disabled docker-ce-stable
docker 
docker pull mysql
docker ps
docker ps -a
docker image
docker image -a
docker images
docker rm 802541663949
docker rmi 802541663949
docker images
cd /etc/yum.repos.d/
ll
touch p.repo
code p.repo 
rm -y p.repo
rm -f p.repo
cd /var/cache
ll
ll | grep yum
ll | grep dnf
cd ./dnf
ll
find . -maxdepth 1 -type f | xargs code
pwd
rpm -k epel-release-latest-8.noarch.rpm
rpm -K epel-release-latest-8.noarch.rpm
cat https://download.docker.com/linux/rhel/gpg
cat /etc/pki/rpm-gpg/RPM-GPG-KEY-localrepo
cd /etc/pki/rpm-gpg/
ll
code *
rpm -q gpg-pubkey
cd /
getenforce
cd /etc/selinux
ll
tree .
code config
cd ./targeted/logins/
ll
cd ..
cd ./policy/
ll
code *
cd /etc/audit/rules.d/
ll
cd /var/log
ll
ll | grep selinux
ll | grep -i selinux
ll | grep -i audi
cd ./audit/
ll
grep AVC audit.log 
ll | xargs grep AVC
ll
ls
ls | xargs grep AVC
pwd
cd /root
ll
ls
ls -f
find . -type f
find . -maxdepth 1 -type f
find . -maxdepth 1 -type f | xargs grep s
find . -maxdepth 1 -type f | xargs grep sudo
find . -maxdepth 1 -type f | xargs -t grep sudo
find / -type d | xargs tree .
ausearch
ausearch -m avc
ausearch -m avc --success no
journalctl | grep AVC
sealert -a /var/log/audit/audit.log
getenforce
sealert'
sealert
journalctl -xef
semodule
semodule -i hhtpd
semodule -i httpd
semodule -i my-httpd.pp
pwd
htop
ll
dnf install htop
top
htop
dnf install htop -y
cd /etc/
ll
ll | rep
ll | grep rep
cd ./yum.repos.d/
ll
dnf install epel-release
dnf repolist
sudo dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm -y
dnf repolist
dnf install htop
htop
pwd
docker ps
htop
touch install_jupyter_bash.sh
chmod 777 install_jupyter_bash.sh 
code install_jupyter_bash.sh 
./install_jupyter_bash.sh 
python3 --version
htop
code install_jupyter_bash.sh 
./install_jupyter_bash.sh 
python3 --version
htop
